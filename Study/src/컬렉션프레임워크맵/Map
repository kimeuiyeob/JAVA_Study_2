Map<K,V> 컬렉션의 특징
Map은 제네릭이 항상 2개이다.
그이유는 항상 키와 밸류값으로 저장되기 때문에
타입도 두개이다.

-Key와 Value 한쌍 으로 데이터를 저장
-key는 중복저장 불가, value는 중복 가능
***Collection과는 별개의 interface임 (list,set과 기본 메서드가 다르다)***

==================================================

-Map의 종류-
HashMap<K,V>
LinkedHashMap<K,V>
HashTable<K,V>
TreeMap<K,V>

-list는 인덱스에 갑을 저장하는데
-map은 키에 값을 저장한다.

get으로 키를 가져오면 키의 해당 밸류값을 뽑아온다(출력한다)
그러므로 키가 중복되면 어떤 키를 불러오는지 모르기 때문에 키는 중복이 안된다.

***키와 밸류를  -> 엔트리라고 한다.
Map.Entry로 키와 밸류를 관리할수 있다.

==================================================
리스와 셋은 한부모 컬렉션이라는 인터페이스로부터 나온거다.
하지만 map은 독릭접으로 따로 나온거다 , 독립적인 인터페이스이다.
리스트와 셋은 데이터를 넣고 빼는데 맵은 키와 밸류로 데이터를 빼오기 때문에 구조가 다르다.

==================================================

데이터 추가 
	-put(K,V)
	-putAll(Map<K,V>)
	
데이터 변경
	-replace(K,V) == 키에 원래있던 값을 V로 바꾼다.
	-replace(K,V oldvalue, V newValue) 예전꺼를 새로운 밸류로 바꾼다.

데이터 정보 추출
	-get(K)
	-containsKey(K)
	-containsValue(V)
	-keySet() == 키를 다 가져온다.
	-entrySet() == 키와 밸류를 가져온다.

데이터 삭제
	-remove(K) == 키를 밸류와 함께 삭제한다
	-remove(K,V) == 키와 밸류가 정확히 같은걸 삭제한다, 만약 키를 삭제해도 밸류값이 다르다면 삭제가 안된다.
==================================================







