package 컬렉션프레임워크맵;

import java.util.TreeMap;

public class TreeMapPractice {

	public static void main(String[] args) {
		
		//TreeMap<K,V>
		/*
		 * Map<K,V> 인터페이스를 구현한 구현 클래스 엔트리 집합의 형태로 관리하며 저장공간을 동적관리한다. 
		 * 입력순서와 관계없이 key값이 크기순으로 출력된다. =>즉 키값은 대소비교가 가능해야한다.
		 */
		
//		 SortedMAp<K,V>		headMap(K tokey)  => tokey보다 작은 key값을 가지는 모든 엔트리 리턴
//		 SortedMAp<K,V>		tailMap(K tokey)  => tokey보다 큰 key값을 가지는 모든 엔트리 리턴
//		 SortedMAp<K,V>		subSet(K formKey, k toKey)   => fromKey 매게변수보다 같거나 크고 toKey보다 작은 key값을 가지는 모든 엔트리 리턴

//	     NavigableSet<K>    descedingKeySet() => Map에 포함된 모든 key값의 정렬을 반대로 변환한 Set객체 리턴
//	     NavigableMap<K>    descedingKeyMap() => Map에 포함된 모든 Key값의 정렬을 받내로 변환한 Map객체 리턴
		
		TreeMap<Integer,String> TM = new TreeMap<>();
		
	}

}
